from mpl_toolkits.mplot3d import Axes3D
import matplotlib.pyplot as plt
import numpy as np

fig = plt.figure()
ax = fig.add_subplot(111, projection = "3d")

data = np.array([[(95.500000, 173.500000, -100.000000), (100.000000, 100.000000, 100.000000), (95.500000, 173.500000, -100.000000), (95.500000, 173.500000, -100.000000), (93.388947, 207.986389, -6.158447)],
[(96.500000, 158.500000, -100.000000), (100.000000, 100.000000, 100.000000), (96.500000, 158.500000, -100.000000), (96.500000, 158.500000, -100.000000), (94.820770, 186.570068, -4.035187)],
[(118.500000, 157.500000, -100.000000), (100.000000, 100.000000, 100.000000), (118.500000, 157.500000, -100.000000), (118.500000, 157.500000, -100.000000), (127.354675, 185.022278, -4.270935)],
[(86.500000, 151.499985, -100.000000), (100.000000, 100.000000, 100.000000), (86.500000, 151.499985, -100.000000), (86.500000, 151.499985, -100.000000), (79.976868, 176.384018, -3.365326)],
[(76.500000, 146.500015, -100.000000), (100.000000, 100.000000, 100.000000), (76.500000, 146.500015, -100.000000), (76.500000, 146.500015, -100.000000), (65.129150, 168.999100, -3.229523)],
[(128.500015, 109.500000, -100.000000), (100.000000, 100.000000, 100.000000), (128.500015, 109.500000, -100.000000), (128.500015, 109.500000, -100.000000), (142.591507, 114.197418, -1.109314)],
[(94.500000, 101.499969, -100.000000), (100.000000, 100.000000, 100.000000), (94.500000, 101.499969, -100.000000), (94.500000, 101.499969, -100.000000), (91.751129, 102.249939, -0.040436)],
[(116.500000, 92.500000, -100.000000), (100.000000, 100.000000, 100.000000), (116.500000, 92.500000, -100.000000), (116.500000, 92.500000, -100.000000), (124.716095, 88.765411, -0.408173)],
[(134.500000, 81.500000, -100.000000), (100.000000, 100.000000, 100.000000), (134.500000, 81.500000, -100.000000), (134.500000, 81.500000, -100.000000), (151.428101, 72.422546, -1.862335)],
[(84.500000, 77.500015, -100.000000), (100.000000, 100.000000, 100.000000), (84.500000, 77.500015, -100.000000), (84.500000, 77.500015, -100.000000), (76.821014, 66.353470, -0.920105)],
[(144.500000, 74.499985, -100.000000), (100.000000, 100.000000, 100.000000), (144.500000, 74.499985, -100.000000), (144.500000, 74.499985, -100.000000), (166.053040, 62.149521, -3.134155)],
[(158.500000, 63.500000, -100.000000), (100.000000, 100.000000, 100.000000), (158.500000, 63.500000, -100.000000), (158.500000, 63.500000, -100.000000), (186.151978, 46.246506, -5.461121)],
[(42.500000, 58.500000, -100.000000), (100.000000, 100.000000, 100.000000), (42.500000, 58.500000, -100.000000), (42.500000, 58.500000, -100.000000), (15.402679, 38.942810, -5.748749)],
[(99.500000, 57.500000, -100.000000), (100.000000, 100.000000, 100.000000), (99.500000, 57.500000, -100.000000), (99.500000, 57.500000, -100.000000), (99.255096, 36.714096, -2.184296)],
[(72.500000, 51.500015, -100.000000), (100.000000, 100.000000, 100.000000), (72.500000, 51.500015, -100.000000), (72.500000, 51.500015, -100.000000), (59.255371, 28.140717, -3.672791)],
[(122.499985, 48.499985, -100.000000), (100.000000, 100.000000, 100.000000), (122.499985, 48.499985, -100.000000), (122.499985, 48.499985, -100.000000), (133.330673, 23.710175, -3.728485)],
[(47.500000, 39.500000, -100.000000), (100.000000, 100.000000, 100.000000), (47.500000, 39.500000, -100.000000), (47.500000, 39.500000, -100.000000), (23.131714, 11.418488, -7.168579)],
[(108.500000, 39.500000, -100.000000), (100.000000, 100.000000, 100.000000), (108.500000, 39.500000, -100.000000), (108.500000, 39.500000, -100.000000), (112.564941, 10.569717, -4.362488)],
[(167.500000, 38.500000, -100.000000), (100.000000, 100.000000, 100.000000), (167.500000, 38.500000, -100.000000), (167.500000, 38.500000, -100.000000), (198.200684, 10.527588, -9.033203)],
[(63.500000, 36.500000, -100.000000), (100.000000, 100.000000, 100.000000), (63.500000, 36.500000, -100.000000), (63.500000, 36.500000, -100.000000), (46.362854, 6.686234, -6.098938)],
[(28.500000, 33.500000, -100.000000), (100.000000, 100.000000, 100.000000), (28.500000, 33.500000, -100.000000), (28.500000, 33.500000, -100.000000), (-3.625664, 3.621002, -10.137939)],
[(18.499992, 26.500008, -100.000000), (100.000000, 100.000000, 100.000000), (18.499992, 26.500008, -100.000000), (18.499992, 26.500008, -100.000000), (-17.224838, -5.718163, -12.331390)],
[(64.500000, 24.499985, -100.000000), (100.000000, 100.000000, 100.000000), (64.500000, 24.499985, -100.000000), (64.500000, 24.499985, -100.000000), (48.118164, -10.340218, -7.707977)],
[(153.500015, 23.499985, -100.000000), (100.000000, 100.000000, 100.000000), (153.500015, 23.499985, -100.000000), (153.500015, 23.499985, -100.000000), (177.740128, -11.160355, -9.384918)],
[(48.500000, 15.500000, -100.000000), (100.000000, 100.000000, 100.000000), (48.500000, 15.500000, -100.000000), (48.500000, 15.500000, -100.000000), (25.420700, -22.368214, -10.371399)],
[(85.500000, 7.500008, -100.000000), (100.000000, 100.000000, 100.000000), (85.500000, 7.500008, -100.000000), (85.500000, 7.500008, -100.000000), (78.934143, -34.387131, -9.432983)],
])
ax.plot([100, 0], [200, 0], [-100, -100], c="b")
ax.plot([0, 200], [0, 0], [-100, -100], c="b")
ax.plot([100, 200], [200, 0], [-100, -100], c="b")
for intersection, normal0, normal1, bounce0, bounce1 in data:
    ax.scatter([intersection[0]], [intersection[1]], [intersection[2]], s=20)
    normalData = zip(normal0, normal1)
    bounceData = zip(bounce0, bounce1)
    ax.plot(normalData[0], normalData[1], normalData[2], c="b")
    ax.plot(bounceData[0], bounceData[1], bounceData[2], c="r")
plt.show()
